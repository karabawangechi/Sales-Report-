{"version":3,"sources":["User.js"],"names":["mongoose","require","Schema","UserSchema","fullname","String","required","email","type","password","createdAt","Date","default","now","updatedAt","methods","isValidPassword","this","User","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,OAAWC,SAAQC,OAGnBC,WAAa,IAAID,OAAO,CAAxBC,SAAAA,CAEFC,KAASC,OACDC,UADC,GAFiBC,MAAA,CAMrBC,KAAEH,OACCC,UADD,EAEHA,QAAU,GAIdG,SAAU,CACFD,KAAEH,OACNC,UAAU,GAEdI,UAAW,CACHF,KADGG,KAEPC,QAASD,KAAKE,OAElBC,UAAW,CACHN,KADGG,KAEPC,QAASD,KAAKE,SAGtBV,WAAWY,QAAQC,gBAAkB,SAAUP,GAC3C,OAAAQ,KAAAR,WAAAA,GAIJ,IAAMS,KAAOlB,SAASmB,MAAM,OAAQhB,YAEpCiB,OAAOC,QAAPH","file":"User.min.js","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst Schema = mongoose.Schema;\r\nconst UserSchema = new Schema({\r\n    \r\n    fullname:{\r\n        type: String,\r\n        required: true\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    \r\n    password: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now()\r\n    },\r\n    updatedAt: {\r\n        type: Date,\r\n        default: Date.now()\r\n    }\r\n})\r\nUserSchema.methods.isValidPassword = function (password) {\r\n    // Simple password validation, you can replace it with your own logic\r\n    return this.password === password;\r\n};\r\n\r\nconst User = mongoose.model('User', UserSchema);\r\n\r\nmodule.exports=User"]}