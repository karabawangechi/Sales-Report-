<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Dashboard</title>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="salesperson.css">

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        
        .dashboard {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 20px;
        }

        .search-bar {
            text-align: center;
            margin-bottom: 20px;
        }

        .search-bar input {
            padding: 10px;
            width: 50%;
            font-size: 16px;
        }

        .charts-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: space-around;
        }
        
        .chart-card {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            flex: 1;
            min-width: 300px;
            max-width: 48%;
            margin-bottom: 20px;
            cursor: pointer; /* Indicate that the cards are clickable */
        }
        
        .chart-card h2 {
            color: #333;
            margin-bottom: 10px;
            text-align: center;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            border-radius: 10px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <!-- SIDEBAR -->
    <section id="sidebar">
        <a href="a" class="brand">
            <i class='bx bx-line-chart-down'></i>
            <span class="text">KBC Sales Report</span>
        </a>
        <ul class="side-menu top">
            <li>
                <a href="index">
                    <i class='bx bxs-dashboard'></i>
                    <span class="text">Dashboard</span>
                </a>
            </li>
            <li>
                <a href="salesperson">
                    <i class='bx bx-user' ></i>
                    <span class="text">Salesperson</span>
                </a>
            </li>
            <li>
                <a href="customer">
                    <i class='bx bx-group' ></i>
                    <span class="text">Customers</span>
                </a>
            </li>
            <li class="active">
                <a href="brand">
                    <i class='bx bxs-business' ></i>
                    <span class="text">Brands</span>
                </a>
            </li>
        </ul>
        <ul class="side-menu">
            <li>
                <a href="#">
                    <i class='bx bx-cog'></i>
                    <span class="text">Settings</span>
                </a>
            </li>
            <li>
                <a href="#" class="logout">
                    <i class='bx bx-log-out' ></i>
                    <span class="text">Log out</span>
                </a>
            </li>
        </ul>
        <img src="images/kbc_logo-removebg-preview.png" alt="" style="margin-top: 24px;">
    </section>
    <!-- SIDEBAR -->

    <!-- CONTENT -->
    <section id="content"> 
        <!-- NAVBAR -->
        <nav>
            <i class='bx bx-menu'></i>
            <a href="#" class="nav-link">Categories</a>
            <form action="#">
                <div class="form-input">
                    <input type="search" placeholder="Search...">
                    <button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
                </div>
            </form>
            <a href="#" class="notification">
                <i class='bx bxs-bell'></i>
                <span class="num">8</span>
            </a>
            <a href="#" class="profile">
                <img src="images/people.png" alt="">
            </a>
        </nav>
        <!-- NAVBAR -->

        <div class="dashboard">
            <h1>Sales Dashboard</h1>
            <a href="salesperformancedata">view sales data</a>

            <div class="search-bar">
                <input type="text" id="salespersonSearch" placeholder="Search for a salesperson...">
                <select id="selectYear">
                    <option value="">Select Year</option>
                    <!-- Options for years will be dynamically populated -->
                </select>
            </div>
            
            <div class="charts-container" id="charts-container">
                <!-- Charts will be dynamically generated here -->
            </div>

            <!-- Modal for detailed view -->
            <div id="modal" class="modal">
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <h2 id="modal-salesperson-name"></h2>
                    <canvas id="line-chart"></canvas>
                    <canvas id="pie-chart"></canvas>
                </div>
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', async () => {
                    let salesData = <%- JSON.stringify(salesData) %>; // Ensure to replace this with actual data if needed
    
                    let lineChartInstance;
                    let pieChartInstance;
    
                    const searchInput = document.getElementById('salespersonSearch');
                    const selectYear = document.getElementById('selectYear');
                    const filterButton = document.getElementById('filterButton');
    
                    // Function to fetch years and populate select options
                    const fetchYears = async () => {
                        try {
                            const response = await fetch('/years');
                            const data = await response.json();
                            const years = data.years;
                            years.forEach(year => {
                                const option = document.createElement('option');
                                option.value = year;
                                option.textContent = year;
                                selectYear.appendChild(option);
                            });
                        } catch (error) {
                            console.error('Error fetching years:', error);
                        }
                    };
    
                    // Function to render charts based on fetched data
                    const renderCharts = (salesData) => {
                        const container = document.getElementById('charts-container');
                        container.innerHTML = '';
    
                        salesData.forEach(salesperson => {
                            const card = document.createElement('div');
                            card.className = 'chart-card';
                            card.innerHTML = `
                                <h2>${salesperson.name}</h2>
                                <canvas id="chart-${salesperson.name.replace(/\s+/g, '')}"></canvas>
                            `;
                            container.appendChild(card);
    
                            const ctx = document.getElementById(`chart-${salesperson.name.replace(/\s+/g, '')}`).getContext('2d');
                            new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: [...new Set(salesperson.labels)],
                                    datasets: [{
                                        label: 'Sales Amount',
                                        data: salesperson.data,
                                        backgroundColor: '#FD7238',
                                        borderColor: '#FD7238',
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            });
    
                            card.addEventListener('click', () => {
                                showModal(salesperson);
                            });
                        });
                    };
    
                    // Function to show modal with detailed charts
                    const showModal = (salesperson) => {
                        const modal = document.getElementById('modal');
                        const modalSalespersonName = document.getElementById('modal-salesperson-name');
                        const lineChartCtx = document.getElementById('line-chart').getContext('2d');
                        const pieChartCtx = document.getElementById('pie-chart').getContext('2d');
    
                        modalSalespersonName.textContent = salesperson.name;
                        modal.style.display = 'block';
    
                        if (lineChartInstance) {
                            lineChartInstance.destroy();
                        }
                        if (pieChartInstance) {
                            pieChartInstance.destroy();
                        }
    
                        lineChartInstance = new Chart(lineChartCtx, {
                            type: 'line',
                            data: {
                                labels: [...new Set(salesperson.labels)],
                                datasets: [{
                                    label: 'Sales Amount',
                                    data: salesperson.data,
                                    borderColor: '#2196f3',
                                    fill: false,
                                    borderWidth: 2
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    x: { beginAtZero: true },
                                    y: { beginAtZero: true }
                                }
                            }
                        });
    
                        pieChartInstance = new Chart(pieChartCtx, {
                            type: 'pie',
                            data: {
                                labels: salesperson.brandLabels,
                                datasets: [{
                                    data: salesperson.brandData,
                                    backgroundColor: salesperson.brandLabels.map((label, index) => {
                                        const colors = [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ];
                                        return colors[index % colors.length];
                                    }),
                                    borderColor: salesperson.brandLabels.map((label, index) => {
                                        const colors = [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ];
                                        return colors[index % colors.length];
                                    }),
                                    borderWidth: 1
                                }]
                            }
                        });
                    };
    
                    // Function to close modal
                    const closeModal = () => {
                        const modal = document.getElementById('modal');
                        modal.style.display = 'none';
                    };
    
                    // Event listeners
                    document.querySelector('.close').addEventListener('click', closeModal);
                    window.addEventListener('click', (event) => {
                        if (event.target === modal) {
                            closeModal();
                        }
                    });
    
                    // Function to fetch filtered sales data based on user input
                    const filterSalesData = async () => {
                        const searchQuery = searchInput.value.toLowerCase();
                        const selectedYear = selectYear.value;
    
                        console.log('Search Query:', searchQuery);
                        console.log('Selected Year:', selectedYear);
    
                        let url = '/salesperson?';
                        if (selectedYear) url += `year=${selectedYear}&`;
                        if (searchQuery) url += `search=${searchQuery}&`;
    
                        console.log('Fetch URL:', url);
    
                        try {
                            const response = await fetch(url);
                            const data = await response.json();
                            console.log('Fetched Data:', data);
    
                            renderCharts(data.salesData); // Render charts with fetched data
                        } catch (error) {
                            console.error('Error fetching data:', error);
                            // Handle error (e.g., display error message to user)
                        }
                    };
    
                    // Event listener for filter button click
                    filterButton.addEventListener('click', filterSalesData);
    
                    // Fetch years and initialize default values
                    await fetchYears();
    
                    // Set default year based on current date logic
                    const currentYear = new Date().getFullYear();
                    const defaultYear = (new Date().getMonth() + 1) >= 7 ? currentYear : currentYear - 1;
                    selectYear.value = defaultYear;
    
                    // Render initial charts with default data (if available)
                    renderCharts(salesData);
                });
            </script>
        </div>
    </section>
    <!-- CONTENT -->
</body>
</html>
